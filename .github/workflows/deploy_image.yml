name: Deploy Image
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image_name:
        required: true
        type: string
      project_id:
        required: true
        type: string
      gcp_region:
        required: true
        type: string
      gcp_tf_bucket_name:
        required: true
        type: string
      gcp_registry_name:
        required: true
        type: string
      gcp_zone:
        required: false
        type: string
      gcp_registry_hostname:
        required: false
        type: string
    secrets:
        GCP_SERVICE_ACCOUNT_FILE:
            required: true
        GITUB_ACCESS_TOKEN:
            required: false
        GITUB_SSH_KEY:
            required: false
jobs:
  deploy_image:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "ENVIRONMENT=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "VARIABLES_CONFIG_PATH=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${{ inputs.project_id }}" >> $GITHUB_ENV
          echo "GCP_REGION=${{ inputs.gcp_region }}" >> $GITHUB_ENV
          echo "GCP_ZONE=${{ inputs.gcp_zone }}" >> $GITHUB_ENV
          echo "GCP_TF_BUCKET_NAME=${{ inputs.gcp_tf_bucket_name }}" >> $GITHUB_ENV
          echo "GCP_CONTAINER_REGISTRY_NAME=${{ inputs.gcp_registry_name }}" >> $GITHUB_ENV
          echo "GCP_CONTAINER_REGISTRY_HOSTNAME=${{ inputs.gcp_registry_hostname }}" >> $GITHUB_ENV

      - name: Set derived image full name
        run: echo "FULL_IMAGE_NAME=${{ inputs.gcp_region }}-docker.pkg.dev/${{ inputs.project_id }}/${{ inputs.gcp_registry_name }}/${{ inputs.image_name }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false 
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_FILE }}
          project_id: ${{ inputs.project_id }}
          token_format: 'access_token'
      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.gcp_region }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Build and Push Container
        run: |-
          docker build \
            -t "${{ env.FULL_IMAGE_NAME }}:${{ github.sha }}" \
            -t "${{ env.FULL_IMAGE_NAME }}:latest" \
            --build-arg GITUB_ACCESS_TOKEN=${{ secrets.GITUB_ACCESS_TOKEN }} \
            --build-arg GITUB_SSH_KEY=${{ secrets.GITUB_SSH_KEY }} \
            --build-arg ENVIRONMENT=${{ inputs.environment }} \
            ./
          docker push "${{ inputs.gcp_region }}-docker.pkg.dev/${{ inputs.project_id }}/${{ inputs.gcp_registry_name }}/${{ inputs.image_name }}"
